<?xml version="1.0" ?>

<!-- Author: Francesco Montorsi <frm@users.sourceforge.net>            -->
<!-- RCS-ID: $Id: wxluabase.bkl,v 1.42 2007/07/31 23:15:12 jrl1 Exp $ -->


<!-- ====================================================================== -->
<!--                         WXLUA GENERIC BAKEFILE                         -->
<!--                                                                        -->
<!--    This bakefile can be used by all wxLua-based apps and libraries.    -->
<!-- ====================================================================== -->

<makefile>

    <requires version="0.2.2"/>
    <using module="datafiles"/>


    <!-- ================================================================== -->
    <!--                              VERSION                               -->
    <!-- ================================================================== -->

    <!--
        wxLua version is strictly tied to the wxWidgets version: the first
        stable release of wxLua wrappers for wx 2.6.2 is named 2.6.2.1;
        other releases which would eventually follow will be named 2.6.2.2,
        2.6.2.3, etc.

        So, only the fourth digit of the wxLua version number is defined here.
        The first three are taken from wxWidgets' version number.

        NOTE: wxLua version is stored in the following variable, WXLUA_RELEASE,
              and in

               1) build\autoconf\configure.ac
               2) distrib\innosetup\wxlua.iss
               3) modules/wxlua/include/wxldefs.h

              files. Remember to update all of them !
    -->

    <set var="WXLUA_RELEASE">4</set>

    <!-- The default version of wxWidgets which is used by wxLua;
         if you want to use other versions, you'll have to specify it
         using the WX_VERSION option -->
    <set var="WX_VERSION_DEFAULT">28</set>

    <!-- these variables needs to be carefully set by someone who
         knows how binary compatibility works ! -->
    <set var="WXLUA_VERSION">$(WX_VERSION_DEFAULT[:1]).$(WX_VERSION_DEFAULT[1:]).$(WXLUA_RELEASE)</set>
    <set var="WXLUA_SOVERSION">0.0.$(WXLUA_RELEASE)</set>
    <set var="WXLUA_MACVERSION">$(int(WXLUA_RELEASE)+1)</set>   <!-- must be > 0 -->



    <!-- ================================================================== -->
    <!--                            VARIABLES                               -->
    <!-- ================================================================== -->

    <!--    A simple variable used to understand if we are          -->
    <!--    creating a makefile for a Win32 target or a more        -->
    <!--    generic linux/GNU-based system.                         -->
    <set var="TARGETING_WIN32">
        <if cond="FORMAT=='autoconf' or FORMAT=='gnu'">0</if>
        <if cond="FORMAT!='autoconf' and FORMAT!='gnu'">1</if>
    </set>
    <set var="TARGETING_UNIX">
        <if cond="FORMAT=='autoconf' or FORMAT=='gnu'">1</if>
        <if cond="FORMAT!='autoconf' and FORMAT!='gnu'">0</if>
    </set>
    <set var="TARGETING_IDE">
        <if cond="FORMAT in [ 'msvc6prj', 'cbuilderx', 'kdevelop', 'msvs2005prj' ]">1</if>
        <if cond="FORMAT not in [ 'msvc6prj', 'cbuilderx', 'kdevelop', 'msvs2005prj' ]">0</if>
    </set>
    <set var="TARGETING_MAKEFILE">
        <if cond="FORMAT in [ 'msvc6prj', 'cbuilderx', 'kdevelop', 'msvs2005prj' ]">0</if>
        <if cond="FORMAT not in [ 'msvc6prj', 'cbuilderx', 'kdevelop', 'msvs2005prj' ]">1</if>
    </set>

    <if cond="TARGETING_WIN32=='1'">
        <set var="SUBPROJECT_POSTFIX_PATH">build/msw</set>
    </if>
    <if cond="TARGETING_WIN32=='0'">
        <set var="SUBPROJECT_POSTFIX_PATH"/>
    </if>



    <!-- ================================================================== -->
    <!--                            OPTIONS                                 -->
    <!-- ================================================================== -->

    <!-- the global options -->
    <include file="options.bkl" once="1"/>




    <!-- ================================================================== -->
    <!--                          TEMPLATES                                 -->
    <!-- ================================================================== -->

    <!-- just a placeholder to mark the place where <lua-lib> will be placed,
         thanks to the order precedence declaration below it: -->
    <define-tag name="__wxlua-libs-point" rules="exe,dll,module"/>
    <define-tag name="__wxlua-req-libs-point" rules="exe,dll,module"/>

    <!-- the <wxlua-lib> tag accepts only those values which refer to a wxLua module name.
         Trying to use an invalid name will generate an error at bake-time.
    -->
    <define-tag name="wxlua-lib" rules="exe,dll,module">
        <if cond="value not in [ 'wxluasocket', 'wxluadebug', 'wxlua', 'wxbindadv', 'wxbindaui', 'wxbindbase', 'wxbindcore', 'wxbindgl', 'wxbindhtml', 'wxbindmedia', 'wxbindnet', 'wxbindrichtext', 'wxbindstc', 'wxbindxml', 'wxbindxrc', 'lua' ]">
            <error>Invalid wxlua-lib value !</error>
        </if>
        <if cond="value=='lua'">
            <sys-lib>lua5.1</sys-lib>
        </if>
        <if cond="value!='lua'">
            <wxlike-lib prefix="wxlua">$(value)</wxlike-lib>
        </if>
    </define-tag>

    <!-- shortcut for including *all* wxLua libraries, even CONTRIB wrappers -->
    <define-tag name="wxlua-alllibs" rules="exe,dll,module">
        <wxlua-lib>wxluasocket</wxlua-lib>
        <wxlua-lib>wxluadebug</wxlua-lib>

        <wxlua-lib>wxbindadv</wxlua-lib>
        <wxlua-lib>wxbindaui</wxlua-lib>
        <wxlua-lib>wxbindbase</wxlua-lib>
        <wxlua-lib>wxbindcore</wxlua-lib>
        <wxlua-lib>wxbindgl</wxlua-lib>
        <wxlua-lib>wxbindhtml</wxlua-lib>
        <wxlua-lib>wxbindmedia</wxlua-lib>
        <wxlua-lib>wxbindnet</wxlua-lib>
        <!-- <wxlua-lib>wxbindrichtext</wxlua-lib> -->
        <wxlua-lib>wxbindstc</wxlua-lib>
        <wxlua-lib>wxbindxml</wxlua-lib>
        <wxlua-lib>wxbindxrc</wxlua-lib>

        <wxlua-lib>wxlua</wxlua-lib>
        <wxlua-lib>lua</wxlua-lib>
    </define-tag>

    <!-- shortcut for including *all* wxLua libraries, except CONTRIB wrappers -->
    <define-tag name="wxlua-allstdlibs" rules="exe,dll,module">
        <wxlua-lib>wxluasocket</wxlua-lib>
        <wxlua-lib>wxluadebug</wxlua-lib>

        <wxlua-lib>wxbindadv</wxlua-lib>
        <wxlua-lib>wxbindaui</wxlua-lib>
        <wxlua-lib>wxbindbase</wxlua-lib>
        <wxlua-lib>wxbindcore</wxlua-lib>
        <!-- <wxlua-lib>wxbindgl</wxlua-lib> -->
        <wxlua-lib>wxbindhtml</wxlua-lib>
        <!-- <wxlua-lib>wxbindmedia</wxlua-lib> -->
        <wxlua-lib>wxbindnet</wxlua-lib>
        <!-- <wxlua-lib>wxbindrichtext</wxlua-lib> -->
        <!-- <wxlua-lib>wxbindstc</wxlua-lib> -->
        <wxlua-lib>wxbindxml</wxlua-lib>
        <wxlua-lib>wxbindxrc</wxlua-lib>

        <wxlua-lib>wxlua</wxlua-lib>
        <wxlua-lib>lua</wxlua-lib>
    </define-tag>

    <!-- shortcut for including all wxWidgets libraries required by wxLua -->
    <define-tag name="wx-alllibs-req-bywxlua" rules="exe,dll,module">
        <wx-lib>xrc</wx-lib>
        <wx-lib>html</wx-lib>
        <!-- <wx-lib>gl</wx-lib> -->
        <wx-lib>aui</wx-lib>
        <!-- <wx-lib>media</wx-lib> -->
        <wx-lib>adv</wx-lib>
        <wx-lib>net</wx-lib>
        <wx-lib>xml</wx-lib>
        <wx-lib>core</wx-lib>
        <wx-lib>base</wx-lib>
    </define-tag>

    <!-- this tag includes the wxLua required libraries, it will be defined
        later in options.bkl -->
    <define-tag name="wxlua-req-libs" rules="exe,dll,module"/>

    <!-- some tag infos -->
    <tag-info name="wxlua-lib" position="before:wxlua-req-libs"/>
    <tag-info name="wxlua-req-libs" position="before:__wxlua-libs-point"/>
    <tag-info name="wx-lib" position="after:__wxlua-libs-point"/>

    <!-- the generic template for wxLua-based libs/apps: this does not derive
         from wx or from wx-lib except for 'wxlike' so that these templates can
         be added later to create templates specific for wxlua-based libs and
         templates specific for wxlua-based apps -->
    <template id="wxlua-base" template="wxlike">
        <!-- honour the value of the RUNTIME_LIBS advanced option for all
             wxLua's apps and libs -->
        <if cond="FORMAT!='autoconf' and TARGETING_IDE=='0'">
            <runtime-libs>$(RUNTIME_LIBS)</runtime-libs>
            <threading>$(THREADING)</threading>
        </if>

        <!-- an additional include & link path are required not only on win32 but also
             on *nix: when compiling the samples or the library the user has not
             installed the library yet ! -->
        <include>$(WXLUA_BASEDIR)/modules</include>

        <!-- this is for art/* files; the ./ is a little hack to avoid formatIfEmpty errors -->
        <include>./$(WXLUA_BASEDIR)</include>

        <!-- both when we use the system lua or our own lua we need an additional include path -->
        <include>$(LUA_DIR)/include</include>
    </template>

    <!-- a template for wxLua-based libraries -->
    <template id="wxlua-lib" template="wx-lib,wxlua-base">
        <!-- we don't need to add anything else to wxlua-base template -->
    </template>

    <!-- a template for wxLua-based exe/dll targets -->
    <template id="wxlua" template="wx,wxlua-base">

        <!-- add the lib output folder as library path for wxlua-based exe/dll targets -->
        <if cond="FORMAT!='autoconf'">
            <set var="_DIRNAME_SHARED_SUFFIX">
                <if cond="SHARED=='0'">lib</if>
                <if cond="SHARED=='1'">dll</if>
            </set>
            <set var="_LIB_DIRNAME">
                $(WXLUA_BASEDIR)/lib/$(COMPILER)_$(_DIRNAME_SHARED_SUFFIX)
            </set>
        </if>
        <if cond="FORMAT=='autoconf'">
            <set var="_LIB_DIRNAME">$(top_builddir)/lib</set>
        </if>
        <lib-path>$(_LIB_DIRNAME)</lib-path>

        <!-- both in case we are using system's lua or our own lua,
             we need yet another linker path -->
        <lib-path>$(LUA_DIR)/lib</lib-path>

        <!-- same technique used by wx_win32.bkl: this is a placeholder
             for the lua-lib tags so that the library order is always
             the exact one -->
        <__wxlua-libs-point/>
    </template>



    <!-- ================================================================== -->
    <!--                            TAGS                                    -->
    <!-- ================================================================== -->

    <!-- defines the <wx-mac-app-bundle> tag -->
    <include file="mac_bundles.bkl" once="1"/>

    <!-- RPATH stuff: -->

    <!-- unlike win compilers, Unix's LD linker supports the -rpath option to insert
        in the generated ELF files an hint to the OS about where to search the required
        shared libraries. This means the user under Unix will be able to run samples
        also before installing the component system-wide:
    -->
    <define-tag name="rpath-to" rules="exe,module">
        <set var="RPATH">
            <if cond="FORMAT=='gnu' and SHARED=='1'">-Wl,-rpath,$(value)/gcc_dll</if>
            <if cond="FORMAT=='autoconf' and SHARED=='1'">-Wl,-rpath,$(value)</if>
        </set>

        <!-- for autoconf&gnu only (see comments above): -->
        <ldflags>$(RPATH)</ldflags>
    </define-tag>


    <!-- TAGS COPIED FROM wx.bkl AND ADAPTED TO USE 'SHARED' option
         instead of the 'WX_SHARED' option
    -->

    <define-tag name="wxlua-dirname" rules="lib,dll,exe,module">
        <if cond="FORMAT!='autoconf'">
            <set var="_DIRNAME_SHARED_SUFFIX">
                <if cond="SHARED=='0'">lib</if>
                <if cond="SHARED=='1'">dll</if>
            </set>
            <set var="_DIRNAME">
                $(value)/$(COMPILER)_$(_DIRNAME_SHARED_SUFFIX)
            </set>

            <dirname>$(_DIRNAME)</dirname>

            <if cond="FORMAT_SUPPORTS_ACTIONS=='1'">
                <set var="__mkdir_tgt">make_dir_$(id)</set>

                <add-target target="$(__mkdir_tgt)" type="action"/>
                <modify-target target="$(__mkdir_tgt)">
                    <command cond="TOOLSET=='unix'">
                        @mkdir -p $(_DIRNAME)
                    </command>
                    <command cond="TOOLSET in ['win32','os2','dos']">
                        if not exist $(nativePaths(_DIRNAME)) mkdir $(nativePaths(_DIRNAME))
                    </command>
            </modify-target>

                <!-- the following code is mostly equivalent to a:
                          <dependency-of>$(id)</dependency-of>
                     put into the __mkdir_tgt target, except that it does _prepend_
                     the __mkdir_tgt dependency instead of appending it.

                     This is required because some compilers (e.g. MSVC) need to store in the
                     output folder some files (e.g. the PDB file) while compiling and thus
                     the library output folder must have been created before _any_ source file
                     is compiled, not just before the library is linked.
                -->
                <modify-target target="$(id)">
                    <set var="__deps" prepend="1">
                        $(substitute(__mkdir_tgt, lambda x: ref('__depname', x), 'DEP'))
                    </set>
                </modify-target>
            </if>
        </if>
        <if cond="FORMAT=='autoconf'">
            <set var="_DIRNAME">$(value)</set>
            <dirname>$(_DIRNAME)</dirname>
        </if>
    </define-tag>

    <define-global-tag name="set-wxlua-builddir">
        <!-- note that the builddir for autoconf should always be '.' -->
        <if cond="FORMAT!='autoconf'">
            <set var="_BUILDDIR_SHARED_SUFFIX">
                <if cond="SHARED=='0'"></if>
                <if cond="SHARED=='1'">_dll</if>
            </set>

            <set var="BUILDDIR">
                $(COMPILER)$(WX_PORT)$(WXLIBPOSTFIX)$(_BUILDDIR_SHARED_SUFFIX)
            </set>
        </if>
    </define-global-tag>


    <!-- Put all the objects files generated by         -->
    <!-- the compilation in a subfolder of BUILD        -->
    <set-wxlua-builddir/>

</makefile>
