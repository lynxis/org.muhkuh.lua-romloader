cmake_minimum_required(VERSION 2.8)

PROJECT("openocd")

INCLUDE(ExternalProject)

SET(VERSION_EXTERNAL "0.9.0")

# Python is required for the patch script.
FIND_PACKAGE(PythonInterp 2.7 REQUIRED)


#----------------------------------------------------------------------------
#
# Build the project.
#
SET(OPENOCD_CMAKE_ARGS "")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_PREFIX_PATH=${CMAKE_CURRENT_BINARY_DIR}/../libusb/install/cmake")
LIST(APPEND OPENOCD_CMAKE_ARGS "-DVERSION_EXTERNAL=${VERSION_EXTERNAL}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	LIST(APPEND OPENOCD_CMAKE_ARGS "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")

ExternalProject_Add(TARGET_openocd
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/openocd-${VERSION_EXTERNAL}
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/openocd-${VERSION_EXTERNAL}.tar.bz2
                    URL_HASH SHA1=bcf99bb21f09513065b2c9ece148ace7d16cdd0c
                    PATCH_COMMAND "${PYTHON_EXECUTABLE}" ${CMAKE_HOME_DIRECTORY}/../cmake/tools/apply_patches.py --working-folder ${CMAKE_CURRENT_BINARY_DIR}/openocd-${VERSION_EXTERNAL}/src/TARGET_openocd --patch-folder ${CMAKE_CURRENT_SOURCE_DIR}/patches --strip 1 --copy-folder ${CMAKE_CURRENT_SOURCE_DIR}/copy
                    CMAKE_ARGS ${OPENOCD_CMAKE_ARGS}
                    INSTALL_COMMAND ${CMAKE_MAKE_PROGRAM} install DESTDIR=${CMAKE_CURRENT_BINARY_DIR}
)
ADD_DEPENDENCIES(TARGET_openocd TARGET_libusb)


#IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
#	SET(DEFINES "-std=c99")
#ENDIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
