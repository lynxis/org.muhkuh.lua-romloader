#----------------------------------------------------------------------------
#
# Set some installation folders.
#

SET(CPACK_PACKAGE_VERSION_MAJOR "${MUHKUH_VERSION_MAJ}")
SET(CPACK_PACKAGE_VERSION_MINOR "${MUHKUH_VERSION_MIN}")
SET(CPACK_PACKAGE_VERSION_PATCH "${MUHKUH_VERSION_SUB}")

STRING(TOLOWER ${CMAKE_SYSTEM_NAME} POM_ID_OS)
IF(NOT DEFINED TARGET_PROCESSOR)
	SET(TARGET_PROCESSOR ${CMAKE_SYSTEM_PROCESSOR})
ENDIF(NOT DEFINED TARGET_PROCESSOR)
SET(POM_ID_PROCESSOR ${TARGET_PROCESSOR})
SET(POM_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})
STRING(REPLACE . _ POM_ID_VERSION ${POM_VERSION})

SET(CPACK_INCLUDE_TOPLEVEL_DIRECTORY FALSE)
SET(CPACK_PACKAGE_FILE_NAME ${PROJECT_NAME}_${POM_ID_OS}_${POM_ID_PROCESSOR}-${POM_VERSION})

IF(UNIX AND NOT WIN32 AND NOT APPLE)
	SET(CPACK_GENERATOR "TBZ2")
ELSE(UNIX AND NOT WIN32 AND NOT APPLE)
	SET(CPACK_GENERATOR "ZIP")
ENDIF(UNIX AND NOT WIN32 AND NOT APPLE)

INCLUDE(CPack)

# This is the new dir structure, use it for packaging.
#IF(UNIX AND NOT WIN32 AND NOT APPLE)
#	SET(INSTALL_DIR_EXECUTABLES "bin")
#	SET(INSTALL_DIR_LUA_MODULES "lib/lua/5.1")
#	IF(CMAKE_SIZEOF_VOID_P MATCHES "8")
#		SET(INSTALL_DIR_SHARED_OBJECTS "lib64")
#	ELSE(CMAKE_SIZEOF_VOID_P MATCHES "8")
#		SET(INSTALL_DIR_SHARED_OBJECTS "lib")
#	ENDIF(CMAKE_SIZEOF_VOID_P MATCHES "8")
#	SET(INSTALL_DIR_LUA_SCRIPTS "lib/lua/5.1")
#ELSE(UNIX AND NOT WIN32 AND NOT APPLE)
	# Install everything in one folder on Win.
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/muhkuh_${POM_ID_VERSION})
	SET(INSTALL_DIR_EXECUTABLES "bin")
	SET(INSTALL_DIR_LUA_MODULES "lua_plugins")
	SET(INSTALL_DIR_PYTHON_MODULES "python_plugins")
	SET(INSTALL_DIR_SHARED_OBJECTS "bin")
	SET(INSTALL_DIR_LUA_SCRIPTS "lua")
#ENDIF(UNIX AND NOT WIN32 AND NOT APPLE)

