// ---------------------------------------------------------------------------
// _luaif/mhash_lua_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "mhash_wxlua_bindings.h"
#include "application/mhash_lua_interface.h"

// ---------------------------------------------------------------------------
// wxLuaGetEventList_mhash_lua() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_mhash_lua(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_mhash_lua() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_mhash_lua(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
        { "KEYGEN_ASIS", KEYGEN_ASIS },
        { "KEYGEN_HEX", KEYGEN_HEX },
        { "KEYGEN_MCRYPT", KEYGEN_MCRYPT },
        { "KEYGEN_PKDES", KEYGEN_PKDES },
        { "KEYGEN_S2K_ISALTED", KEYGEN_S2K_ISALTED },
        { "KEYGEN_S2K_SALTED", KEYGEN_S2K_SALTED },
        { "KEYGEN_S2K_SIMPLE", KEYGEN_S2K_SIMPLE },
        { "MHASH_ADLER32", MHASH_ADLER32 },
        { "MHASH_AR", MHASH_AR },
        { "MHASH_BOOGNISH", MHASH_BOOGNISH },
        { "MHASH_CELLHASH", MHASH_CELLHASH },
        { "MHASH_CRC32", MHASH_CRC32 },
        { "MHASH_CRC32B", MHASH_CRC32B },
        { "MHASH_FFT_HASH_I", MHASH_FFT_HASH_I },
        { "MHASH_FFT_HASH_II", MHASH_FFT_HASH_II },
        { "MHASH_GOST", MHASH_GOST },
        { "MHASH_HAVAL128", MHASH_HAVAL128 },
        { "MHASH_HAVAL160", MHASH_HAVAL160 },
        { "MHASH_HAVAL192", MHASH_HAVAL192 },
        { "MHASH_HAVAL224", MHASH_HAVAL224 },
        { "MHASH_HAVAL256", MHASH_HAVAL256 },
        { "MHASH_MD2", MHASH_MD2 },
        { "MHASH_MD4", MHASH_MD4 },
        { "MHASH_MD5", MHASH_MD5 },
        { "MHASH_NHASH", MHASH_NHASH },
        { "MHASH_PANAMA", MHASH_PANAMA },
        { "MHASH_RIPEMD128", MHASH_RIPEMD128 },
        { "MHASH_RIPEMD160", MHASH_RIPEMD160 },
        { "MHASH_RIPEMD256", MHASH_RIPEMD256 },
        { "MHASH_RIPEMD320", MHASH_RIPEMD320 },
        { "MHASH_SHA1", MHASH_SHA1 },
        { "MHASH_SHA224", MHASH_SHA224 },
        { "MHASH_SHA256", MHASH_SHA256 },
        { "MHASH_SHA384", MHASH_SHA384 },
        { "MHASH_SHA512", MHASH_SHA512 },
        { "MHASH_SMASH", MHASH_SMASH },
        { "MHASH_SNEFRU128", MHASH_SNEFRU128 },
        { "MHASH_SNEFRU256", MHASH_SNEFRU256 },
        { "MHASH_SUBHASH", MHASH_SUBHASH },
        { "MHASH_TIGER128", MHASH_TIGER128 },
        { "MHASH_TIGER160", MHASH_TIGER160 },
        { "MHASH_TIGER192", MHASH_TIGER192 },
        { "MHASH_WHIRLPOOL", MHASH_WHIRLPOOL },
        { "MUTILS_INVALID_FORMAT", MUTILS_INVALID_FORMAT },
        { "MUTILS_INVALID_FUNCTION", MUTILS_INVALID_FUNCTION },
        { "MUTILS_INVALID_INPUT_BUFFER", MUTILS_INVALID_INPUT_BUFFER },
        { "MUTILS_INVALID_OUTPUT_BUFFER", MUTILS_INVALID_OUTPUT_BUFFER },
        { "MUTILS_INVALID_PASSES", MUTILS_INVALID_PASSES },
        { "MUTILS_INVALID_RESULT", MUTILS_INVALID_RESULT },
        { "MUTILS_INVALID_SIZE", MUTILS_INVALID_SIZE },
        { "MUTILS_OK", MUTILS_OK },
        { "MUTILS_PARAMETER_ERROR", MUTILS_PARAMETER_ERROR },
        { "MUTILS_SYSTEM_ERROR", MUTILS_SYSTEM_ERROR },
        { "MUTILS_SYSTEM_RESOURCE_ERROR", MUTILS_SYSTEM_RESOURCE_ERROR },
        { "MUTILS_UNSPECIFIED_ERROR", MUTILS_UNSPECIFIED_ERROR },

        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_mhash_lua() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_mhash_lua(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_mhash_lua() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_mhash_lua(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_mhash_lua() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_mhash_lua() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_mhash_lua(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_mhash_lua() is called to register classes
// ---------------------------------------------------------------------------

wxLuaBindClass* wxLuaGetClassList_mhash_lua(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
        { "mhash_state", mhash_state_methods, mhash_state_methodCount, NULL, &wxluatype_mhash_state, NULL, NULL ,g_wxluanumberArray_None, 0, }, 

        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_mhash_lua() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_mhash_lua, wxLuaBinding)

wxLuaBinding_mhash_lua::wxLuaBinding_mhash_lua() : wxLuaBinding()
{
    m_bindingName   = wxT("mhash_lua");
    m_nameSpace     = wxT("mhash");
    m_classArray    = wxLuaGetClassList_mhash_lua(m_classCount);
    m_numberArray   = wxLuaGetDefineList_mhash_lua(m_numberCount);
    m_stringArray   = wxLuaGetStringList_mhash_lua(m_stringCount);
    m_eventArray    = wxLuaGetEventList_mhash_lua(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_mhash_lua(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_mhash_lua(m_functionCount);
}



// ---------------------------------------------------------------------------

bool wxLuaBinding_mhash_lua_init()
{
    static wxLuaBinding_mhash_lua m_binding;
    if (wxLuaBinding::GetBindingList()->Find(&m_binding)) return false;

    wxLuaBinding::GetBindingList()->Append(&m_binding);
    return true;
}


