// ---------------------------------------------------------------------------
// _luaif/bit_lua_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#include "wx/wxprec.h"

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif


#include "wxlua/include/wxlstate.h"
#include "bit_wxlua_bindings.h"
#include "application/bit_lua_interface.h"

// ---------------------------------------------------------------------------
// wxLuaGetEventList_bit_lua() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_bit_lua(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_bit_lua() is called to register %define and %enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_bit_lua(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {

        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_bit_lua() is called to register %define %string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_bit_lua(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_bit_lua() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_bit_lua(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_bit_lua() is called to register global functions
// ---------------------------------------------------------------------------

static wxLuaArgType s_wxluatypeArray_wxLua_function_band[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function unsigned long band(unsigned long a, unsigned long b)
static int LUACALL wxLua_function_band(lua_State *L)
{
    // unsigned long b
    unsigned long b = (long)wxlua_getnumbertype(L, 2);
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call band
    unsigned long returns = (band(a, b));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_band[1] = {{ wxLua_function_band, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_band }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_bnot[] = { &wxluatype_TNUMBER, NULL };
// %function unsigned long bnot(unsigned long a)
static int LUACALL wxLua_function_bnot(lua_State *L)
{
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call bnot
    unsigned long returns = (bnot(a));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_bnot[1] = {{ wxLua_function_bnot, WXLUAMETHOD_CFUNCTION, 1, 1, s_wxluatypeArray_wxLua_function_bnot }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_bor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function unsigned long bor(unsigned long a, unsigned long b)
static int LUACALL wxLua_function_bor(lua_State *L)
{
    // unsigned long b
    unsigned long b = (long)wxlua_getnumbertype(L, 2);
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call bor
    unsigned long returns = (bor(a, b));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_bor[1] = {{ wxLua_function_bor, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_bor }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_bshl[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function unsigned long bshl(unsigned long a, unsigned long b)
static int LUACALL wxLua_function_bshl(lua_State *L)
{
    // unsigned long b
    unsigned long b = (long)wxlua_getnumbertype(L, 2);
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call bshl
    unsigned long returns = (bshl(a, b));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_bshl[1] = {{ wxLua_function_bshl, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_bshl }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_bshr[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function unsigned long bshr(unsigned long a, unsigned long b)
static int LUACALL wxLua_function_bshr(lua_State *L)
{
    // unsigned long b
    unsigned long b = (long)wxlua_getnumbertype(L, 2);
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call bshr
    unsigned long returns = (bshr(a, b));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_bshr[1] = {{ wxLua_function_bshr, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_bshr }};

static wxLuaArgType s_wxluatypeArray_wxLua_function_bxor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
// %function unsigned long bxor(unsigned long a, unsigned long b)
static int LUACALL wxLua_function_bxor(lua_State *L)
{
    // unsigned long b
    unsigned long b = (long)wxlua_getnumbertype(L, 2);
    // unsigned long a
    unsigned long a = (long)wxlua_getnumbertype(L, 1);
    // call bxor
    unsigned long returns = (bxor(a, b));
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_bxor[1] = {{ wxLua_function_bxor, WXLUAMETHOD_CFUNCTION, 2, 2, s_wxluatypeArray_wxLua_function_bxor }};

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_bit_lua() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_bit_lua(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {
        { "band", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_band, 1, NULL },
        { "bnot", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_bnot, 1, NULL },
        { "bor", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_bor, 1, NULL },
        { "bshl", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_bshl, 1, NULL },
        { "bshr", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_bshr, 1, NULL },
        { "bxor", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_bxor, 1, NULL },

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_bit_lua() is called to register classes
// ---------------------------------------------------------------------------

wxLuaBindClass* wxLuaGetClassList_bit_lua(size_t &count)
{
    static wxLuaBindClass classList[] =
    {

        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_bit_lua() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_bit_lua, wxLuaBinding)

wxLuaBinding_bit_lua::wxLuaBinding_bit_lua() : wxLuaBinding()
{
    m_bindingName   = wxT("bit_lua");
    m_nameSpace     = wxT("bit");
    m_classArray    = wxLuaGetClassList_bit_lua(m_classCount);
    m_numberArray   = wxLuaGetDefineList_bit_lua(m_numberCount);
    m_stringArray   = wxLuaGetStringList_bit_lua(m_stringCount);
    m_eventArray    = wxLuaGetEventList_bit_lua(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_bit_lua(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_bit_lua(m_functionCount);
}



// ---------------------------------------------------------------------------

bool wxLuaBinding_bit_lua_init()
{
    static wxLuaBinding_bit_lua m_binding;
    if (wxLuaBinding::GetBindingList()->Find(&m_binding)) return false;

    wxLuaBinding::GetBindingList()->Append(&m_binding);
    return true;
}


